import { Telegraf, Markup } from 'telegraf';
import { env } from './env.js';
import { markPaid, getReferrer } from './referral-store.js';

export function initBot() {
  const bot = new Telegraf(env.TELEGRAM_BOT_TOKEN);

  bot.start((ctx) => {
    ctx.reply(
      '–û–∂–∏–≤–∏ —Ä–∏—Å—É–Ω–æ–∫ —Ä–µ–±—ë–Ω–∫–∞ –≤ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤ ‚Äî –∑–∞–ø—É—Å–∫–∞–π Mini App!',
      Markup.inlineKeyboard([
        [Markup.button.webApp('üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å', env.TELEGRAM_WEBAPP_URL)]
      ])
    );
  });

  bot.on('pre_checkout_query', (ctx) => ctx.answerPreCheckoutQuery(true));

  bot.on('message', async (ctx) => {
    const m: any = ctx.message;
    if (m?.successful_payment) {
      const uid = m.from.id as number;
      markPaid(uid);
      const ref = getReferrer(uid);
      if (ref && ref !== uid) {
        try {
          await ctx.telegram.sendMessage(ref, 'üéâ –¢–≤–æ–π –¥—Ä—É–≥ –æ—Ñ–æ—Ä–º–∏–ª –ø–µ—Ä–≤—É—é –ø–æ–∫—É–ø–∫—É! –ù–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å.');
        } catch (e) { console.error('notify referrer', e); }
      }
      try { await ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É! –≠–º–æ—Ü–∏–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.'); } catch {}
    }
  });

  return bot;
}
